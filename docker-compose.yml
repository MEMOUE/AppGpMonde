version: '3.8'

services:
  # Reverse Proxy Traefik
  traefik:
    image: traefik:v2.10
    container_name: gp-traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=memko021@gmail.com
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - gp-network

  # Backend Spring Boot
  backend:
    build:
      context: ./BackGp
      dockerfile: Dockerfile
    container_name: gp-backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/gpmonde_db
      - SPRING_DATASOURCE_USERNAME=user_gpmonde
      - SPRING_DATASOURCE_PASSWORD=GpMonde@2022
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./backend/keystore.p12:/app/keystore.p12
      - app-logs:/app/logs
    networks:
      - gp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.votre-domaine.com`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=le"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"

  # Frontend Angular
  frontend:
    build:
      context: ./GpFront
      dockerfile: Dockerfile
    container_name: gp-front
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - gp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`votre-domaine.com`) || Host(`www.votre-domaine.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=le"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: gp-mysql
    environment:
      MYSQL_DATABASE: gpmonde_db
      MYSQL_USER: user_gpmonde
      MYSQL_PASSWORD: GpMonde@2022
      MYSQL_ROOT_PASSWORD: Memko@2022
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - gp-network

volumes:
  mysql-data:
  app-logs:
  letsencrypt:

networks:
  gp-network:
    driver: bridge